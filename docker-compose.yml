# Use root/example as user/password credentials

# Make a .env file like:
# MONGO_USERNAME=...
# MONGO_PASSWORD=...
# MONGO_EXPRESS_USERNAME=...
# MONGO_EXPRESS_PASSWORD=...

# And then run docker-compose up --env-file=.env -d

version: '3.1'

services:

  mongo:
    image: mongo:6.0.5
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongo
    networks:
      - app-network

  ingestor:
    build: src/ingestor
    restart: always
    environment:
      MONGO_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
    networks:
      - app-network
    depends_on:
      - mongo

  # TODO: make dockerfile for analytics
  analytics:
    build: src/analytics
    environment:
      MONGO_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
    networks:
      - app-network
    depends_on:
      - mongo

  # TODO: make dockerfile for backend
  backend:
    build: src/webapp/be
    networks:
      - app-network
    depends_on:
      - mongo

  # TODO: make dockerfile for frontend
  frontend:
    build: src/webapp/fe
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    image: nginx:1.24.0
    volumes:
      # TODO: make nginx.conf
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
      - ingestor
      - mongo-express


networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
